/*
 * Copyright 2004-2009, Stephan AÃŸmus <superstippi@gmx.de>
 * All rights reserved. Distributed under the terms of the MIT license.
 */

// CommonPropertyIDs.h

#ifndef COMMON_PROPERTY_IDS_H
#define COMMON_PROPERTY_IDS_H

#include <SupportDefs.h>

class Property;

enum {
	PROPERTY_NAME						= 'name',
	PROPERTY_DESCRIPTION				= 'dscr',
	PROPERTY_KEYWORDS					= 'kwrd',
	PROPERTY_TYPE						= 'type',
	PROPERTY_PATH						= 'path',
	PROPERTY_TEMPLATE_NAME				= 'tmpl',
	PROPERTY_LOG_PLAYBACK				= 'clgp',

	PROPERTY_TYPE_MARKER				= 'tpmk',
	PROPERTY_SEQUENCE_INDEX				= 'sqnb',
	PROPERTY_ITEM_DURATION				= 'imdr',
	PROPERTY_COLLECTOR_MODE				= 'cltm',
	PROPERTY_BACKGROUND_SOUND_ID		= 'bsnd',
	PROPERTY_BACKGROUND_SOUND_VOLUME	= 'bsvl',

	PROPERTY_AUTHOR						= 'athr',
	PROPERTY_COMPANY					= 'cmpy',
	PROPERTY_CLIENT						= 'clnt',
	PROPERTY_SCOPE						= 'scop',

	PROPERTY_UNIT_ID					= 'unit',

	PROPERTY_SCHEDULE_TYPE				= 'sctp',
	PROPERTY_WEEK_DAYS					= 'wkds',
	PROPERTY_DATE						= 'date',

	PROPERTY_START_DATE					= 'stdt',
	PROPERTY_VALID_DAYS					= 'vlds',

	PROPERTY_START_TIME					= 'sttm',
	PROPERTY_REPEAT_COUNT				= 'rpct',
	PROPERTY_AUTO_START_TIME			= 'astt',

	PROPERTY_ID							= 'soid',
	PROPERTY_SYNC_STATUS				= 'syst',
	PROPERTY_STATUS						= 'stat',
	PROPERTY_PLAYLIST_SCHEDULEABLE		= 'plsc',
	PROPERTY_VERSION					= 'vrsn',
	PROPERTY_MIME_TYPE					= 'mime',
	PROPERTY_DURATION					= 'drtn',
	PROPERTY_DURATION_INFO				= 'dinf',
	PROPERTY_WIDTH						= 'wdth',
	PROPERTY_HEIGHT						= 'hght',

	PROPERTY_TRANSITION_DURATION		= 'trdr',
	PROPERTY_TRANSITION_MODE			= 'trmd',	// not yet used

	PROPERTY_OPACITY					= 'alpa',
	PROPERTY_MAX_AUTO_GAIN				= 'magn',

	PROPERTY_PIVOT_X					= 'pvtx',
	PROPERTY_PIVOT_Y					= 'pvty',
	PROPERTY_TRANSLATION_X				= 'trnx',
	PROPERTY_TRANSLATION_Y				= 'trny',
	PROPERTY_ROTATION					= 'rotn',
	PROPERTY_SCALE_X					= 'sclx',
	PROPERTY_SCALE_Y					= 'scly',

	PROPERTY_TEXT						= 'scrt',
	PROPERTY_FONT						= 'font',
	PROPERTY_FONT_SIZE					= 'fnts',
	PROPERTY_COLOR						= 'colr',
	PROPERTY_OUTLINE_COLOR				= 'oclr',
	PROPERTY_USE_OUTLINE				= 'uotl',
	PROPERTY_BACKGROUND_COLOR			= 'bgcl',
	PROPERTY_HORIZONTAL_ALIGNMENT		= 'hral',
	PROPERTY_VERTICAL_ALIGNMENT			= 'vral',
	PROPERTY_SCROLLING_SPEED			= 'scsp',
	PROPERTY_SCROLLING_RESET_TIMEOUT	= 'srto',

	PROPERTY_PARAGRAPH_INSET			= 'pgpi',
	PROPERTY_PARAGRAPH_SPACING			= 'pgps',
	PROPERTY_LINE_SPACING				= 'lnsp',
	PROPERTY_GLYPH_SPACING				= 'glsp',
	PROPERTY_FONT_HINTING				= 'fhnt',
	PROPERTY_BLOCK_WIDTH				= 'txtw',

	PROPERTY_FADE_MODE					= 'fdmd',

	PROPERTY_TABLE_COLUMN_COUNT			= 'tclc',
	PROPERTY_TABLE_COLUMN_WIDTH			= 'tcwd',
	PROPERTY_TABLE_COLUMN_SPACING		= 'tcsp',
	PROPERTY_TABLE_ROW_COUNT			= 'trwc',
	PROPERTY_TABLE_ROW_HEIGHT			= 'trwd',
	PROPERTY_TABLE_ROW_SPACING			= 'trsp',
	PROPERTY_TABLE_ROUND_CORNER_RADIUS	= 'trcr',
	PROPERTY_TABLE_FADE_IN_MODE			= 'tfim',
	PROPERTY_TABLE_FADE_IN_FRAMES		= 'tfif',
	PROPERTY_TABLE_FADE_OUT_MODE		= 'tfom',
	PROPERTY_TABLE_FADE_OUT_FRAMES		= 'tfof',
	PROPERTY_CELL_COLUMN				= 'clcl',
	PROPERTY_CELL_ROW					= 'clrw',

	PROPERTY_CLOCK_ANALOG_FACE			= 'ckaf',
	PROPERTY_TIME_FORMAT				= 'tfmt',
	PROPERTY_DATE_FORMAT				= 'dftm',
	PROPERTY_DATE_OFFSET				= 'dtof',
	PROPERTY_TIMER_DIRECTION			= 'tmdr',

	PROPERTY_WEATHER_TIME				= 'wftm',
	PROPERTY_WEATHER_DISPLAY_LAYOUT		= 'wssi',
	PROPERTY_METAR_LOCATION				= 'mtlc',

	PROPERTY_REFERENCED_PLAYLIST		= 'rfpl',
	PROPERTY_REFERENCED_DISPLAY_SETTINGS = 'rfds',
	PROPERTY_SERVER_IP					= 'svip',
	PROPERTY_SECONDARY_SERVER_IP		= 'sip2',
	PROPERTY_ERASE_DATA_FOLDER			= 'ersd',
	PROPERTY_ERASE_OLD_REVISIONS		= 'ersr',
	PROPERTY_LOG_UPLOAD_TIME			= 'lgut',
	PROPERTY_CLIENT_SETTINGS_APPLIED	= 'csap',

	PROPERTY_CLIP_ID					= 'cpid',

	PROPERTY_PASSWORD					= 'pswd',

	PROPERTY_REVISION_INSTALLED			= 'rvin',
	
	PROPERTY_INPUT_SOURCE				= 'insr',
	PROPERTY_DISPLAY_WIDTH				= 'dwid',
	PROPERTY_DISPLAY_HEIGHT				= 'dhei',
	PROPERTY_DISPLAY_FREQUENCY			= 'dfrq',

	PROPERTY_COMMAND_PATH				= 'cmmd',
};

enum {
	SYNC_STATUS_LOCAL					= 'locl',
	SYNC_STATUS_PUBLISHED				= 'publ',
	SYNC_STATUS_MODIFIED				= 'mdfd',
	SYNC_STATUS_SERVER_REMOVED			= 'rmvd',
	SYNC_STATUS_LOCAL_REMOVED			= 'lcrm',
};

enum {
	PLAYLIST_STATUS_DRAFT				= 'drft',
	PLAYLIST_STATUS_TESTING				= 'test',
	PLAYLIST_STATUS_READY				= 'redy',
	PLAYLIST_STATUS_LIVE				= 'live',
};

enum {
	SCHEDULE_TYPE_WEEKLY				= 'wkly',
	SCHEDULE_TYPE_DATE					= 'date',
};

enum {
	COLLECTOR_MODE_SEQUENCE				= 'sqnc',
	COLLECTOR_MODE_RANDOM				= 'rndm',
};

// TODO: put table fade in/out modes into general fade modes
enum {
	TABLE_FADE_IN_EXPAND				= 'expd',
	TABLE_FADE_IN_SLIDE					= 'sdlr',
	TABLE_FADE_IN_EXPAND_ROWS			= 'expr',
	TABLE_FADE_IN_EXPAND_COLUMNS		= 'expc',
};

enum {
	TABLE_FADE_OUT_COLLAPSE				= 'clps',
	TABLE_FADE_OUT_SLIDE				= 'sdrl',
	TABLE_FADE_COLLAPSE_ROWS			= 'clpr',
	TABLE_FADE_COLLAPSE_COLUMNS			= 'clpc',
};

enum {
	FADE_MODE_ALPHA						= 'falp',
	FADE_MODE_WIPE_LEFT_RIGHT			= 'fwlr',
	FADE_MODE_WIPE_RIGHT_LEFT			= 'fwrl',
	FADE_MODE_WIPE_TOP_BOTTOM			= 'fwtb',
	FADE_MODE_WIPE_BOTTOM_TOP			= 'fwbt',
};


enum {
	ALIGN_BEGIN							= 0,
	ALIGN_END							= 1,
	ALIGN_CENTER						= 2,
	ALIGN_STRETCH						= 3,
};

// NOTE: do not mess with the order, only append at last index
enum {
	DATE_NONE							= 0,

	DATE_DD_MM_YYYY						= 1,
	DATE_DD_MM_YY						= 2,
	DATE_DD_MM							= 3,
	DATE_WEEKDAY_DD_MM_YYYY				= 4,
	DATE_WEEKDAY_DD_MM_YY				= 5,
	DATE_WEEKDAY_DD_MONTH_YYYY			= 6,

	DATE_DD								= 7,
	DATE_MONTH							= 8,
	DATE_MONTH_ALL_UPPERS				= 9,
	DATE_WEEKDAY						= 10,
};

enum {
	TIME_NONE							= 0,

	TIME_HH_MM_SS						= 1,
	TIME_HH_MM							= 2,

	// used only by CountdownClip
	TIME_HH_MM_SS_MMM					= 3,
	TIME_MM_SS_MMM						= 4,
	TIME_SS_MMM							= 5,
	TIME_MM_SS							= 6,
	TIME_SS								= 7,

	TIME_HH_MM_SS_FF					= 8,
};

enum {
	TIMER_DIRECTION_FORWARD				= 0,
	TIMER_DIRECTION_BACKWARD			= 1,
};

enum {
	METAR_LOCATION_AACHEN				= 'ETBA',
	METAR_LOCATION_ALTENSTADT			= 'ETHA',
	METAR_LOCATION_AUGSBURG				= 'EDMA',
	METAR_LOCATION_BADEN_WUERTTEMBERG	= 'EDFM',
	METAR_LOCATION_BAYREUTH				= 'EDQD',
	METAR_LOCATION_BERLIN				= 'EDDI',
	METAR_LOCATION_BRAUNSCHWEIG			= 'EDVE',
	METAR_LOCATION_BREMEN				= 'EDDW',
	METAR_LOCATION_CHEMNITZ				= 'ETAD',
	METAR_LOCATION_COBURG				= 'ETIN',
	METAR_LOCATION_COTTBUS				= 'ETNR',
	METAR_LOCATION_DORTMUND				= 'EDLW',
	METAR_LOCATION_DRESDEN				= 'EDDC',
	METAR_LOCATION_DUESSELDORF			= 'EDDL',
	METAR_LOCATION_ERDING				= 'ETSE',
	METAR_LOCATION_ESSEN				= 'EDZE',
	METAR_LOCATION_FRANKFURT_MAIN		= 'EDDF',
	METAR_LOCATION_FRIEDRICHSHAFEN		= 'EDNY',
	METAR_LOCATION_GIESSEN				= 'ETHM',
	METAR_LOCATION_HAMBURG				= 'EDDH',
	METAR_LOCATION_HANAU				= 'ETID',
	METAR_LOCATION_HANNOVER				= 'EDDV',
	METAR_LOCATION_HEIDELBERG			= 'ETIE',
	METAR_LOCATION_INGOLSTADT			= 'ETSI',
	METAR_LOCATION_KARLSRUHE			= 'ETOR',
	METAR_LOCATION_KASSEL				= 'ETHF',
	METAR_LOCATION_KIEL					= 'ETMK',
	METAR_LOCATION_KOELN				= 'EDDK',
	METAR_LOCATION_KONSTANZ				= 'EDTZ',
	METAR_LOCATION_LANDSBERG			= 'ETSA',
	METAR_LOCATION_LEIPZIG				= 'EDDP',
	METAR_LOCATION_MEMMINGEN			= 'ETSM',
	METAR_LOCATION_MUENCHEN				= 'EDDM',
	METAR_LOCATION_MUENSTER				= 'EDDG',
	METAR_LOCATION_NUERNBERG			= 'EDDN',
	METAR_LOCATION_PADERBORN			= 'EDLP',
	METAR_LOCATION_REGENSBURG			= 'ETIH',
	METAR_LOCATION_ROSTOCK				= 'ETNL',
	METAR_LOCATION_SAARBRUECKEN			= 'EDDR',
	METAR_LOCATION_STUTTGART			= 'EDDS',
	METAR_LOCATION_WEIMAR				= 'EDDE',
	METAR_LOCATION_WIESBADEN			= 'ETOU',
	METAR_LOCATION_WUERZBURG			= 'ETEU',
};

enum {
	WEATHER_FORMAT_NOW					= 'wfnw',
	WEATHER_FORMAT_TODAY_MORNING		= 'wftm',
	WEATHER_FORMAT_TODAY_DAY			= 'wftd',
	WEATHER_FORMAT_TODAY_EVENING		= 'wfte',
	WEATHER_FORMAT_TODAY_NIGHT			= 'wftn',
	WEATHER_FORMAT_NEXT_DAY				= 'wf1d',
	WEATHER_FORMAT_NEXT_NIGHT			= 'wf1n',
	WEATHER_FORMAT_NEXT_NEXT_DAY		= 'wf2d',
	WEATHER_FORMAT_NEXT_NEXT_NIGHT		= 'wf2n',
};

enum {
	WEATHER_DISPLAY_LAYOUT_ICON_LEFT	= 'wdll',
	WEATHER_DISPLAY_LAYOUT_ICON_RIGHT	= 'wdlr',
	WEATHER_DISPLAY_LAYOUT_NO_ICON		= 'wdln',
};

enum {
	DISPLAY_INPUT_SOURCE_VGA			= 'vga ',
	DISPLAY_INPUT_SOURCE_DVI			= 'dvi ',
};


const char*		name_for_id(int32 id);
bool			is_default_value(const Property* p);

#endif // PROPERTY_H


