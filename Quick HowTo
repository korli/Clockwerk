The main component of the Open Source version of Mindwork's multi-media framework is Clockwerk, the editor. And this one can be launched like any regular BeOS/Haiku application.

Clockwerk used to be a tool for importing media files into a global clip library and creating playlist content from these clips, including playlists that use other playlists like regular clips (i.e. nested playlists). There used to be a network component to Clockwerk and a server counter part, but these have been disabled respectively stripped from the Open Source release. It is still important to keep all this in mind to understand some of the quirks and weirdness currently present in Clockwerk.

For example, it is currently not possible to save project data outside of the "/boot/home/clockwerk" folder. Every created or imported clip will be copied into this folder. There will be useless version control meta-data associated with each clip object and all files are copied instead of simply linked. To save the current objects including the current playlist, invoke "Playlist->Save Objects". Clockwerk will always load the global object library on start and open the last used playlist.

When you start Clockwerk for the first time, the first thing you should do is create a new playlist object ("Playlist -> New" or "Clip -> Create -> Playlist"). Clockwerk will automatically open this playlist if it is the first.

You import media files such as bitmaps and video clips by dragging them from Tracker into the Clip list view. (It is being copied into the clip library, so it may take a moment depending on the file size.) Once a clip is selected there, you can edit properties in the Property list view. The Property list view always shows the last selected object (such as clips, but also clip instances on the timeline view).

From the Clip list view, you can drag clips onto the timeline (if a playlist is currently loaded). This will create a so called "instance of the clip". Instances maintain their own properties, and these can also be animated. When you hold down the Command key, you can also replace the clip that an existing instance is pointing to by dropping another clip onto the instance.

There are two ways to animate a property. Currently, the timeline instance will always display the Opacity property (which doubles as "Volume" for audio clips) right on the Clip display and you can click to add new control points and drag the points to animate the property along the curve. You cannot currently change the property for which the curve is displayed, although this is planned for the future. The second option is to select properties in the Property list view, drag the current frame somewhere appropriate on the time line and chose "Property -> Add Key",  which will add a keyframe for all then selected properties. When you change property values, and the property already has a keyframe somewhere, then a new keyframe will automatically be inserted at the current frame, unless there is already a keyframe right there, then that keyframe's value will be adjusted. You can select multiple properties at once with the Shift key. Also note that small red keyframe indicators appear on the time line view. You can drag these indicators to move the keyframe position, or drag them off the time line view to remove the key. This works best when you have only one animated propety selected at the time, since otherwise you don't know to which selected property the keys belong.


The stage view (video preview) on the top-right has also tools associated. There is the "View" tool (i.e. no tool, just view the preview), the "Transform" tool (box icon) and the "Edit" tool. The Edit tool is for editing clip properties directly on the stage. This works for certain clip types only, and the clip instance in the timeline has to be selected. It works for Table and Text Clips.

Double clicking any clip in the Clip list view will allow you to edit this clip. For example, double clicking a bitmap will open WonderBrush and indeed the two applications have means of communication to make this as seamless as possible. Clockwerk should automatically update when you save the bitmap in WonderBrush. Via the system-wide WonderBrush Translator plug-in, this even works for native WonderBrush documents. Double clicking a playlist will just switch Clockwerk to this playlist, potentially asking you to save your work first.

Well, I hope this short introduction gets you started with Clockwerk! If you are a developer, please consider joining the Clockwerk project on OSDrawer.net. As you can see, Clockwerk needs to improve a lot, but it has a good headstart at the same time and is already quite powerful. If you are no programmer, please bear with the Clockwerk project, it is going to get a lot more comfortable and powerful over time! Your feedback is important and you can reach me at <superstippi@gmx.de>.
